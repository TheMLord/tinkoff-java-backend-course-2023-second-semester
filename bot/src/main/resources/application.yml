app:
  telegram-token: ${bot_token}
  scrapper-base-uri: http://localhost:8080
  retry:
    back-off-policy: linear
    httpStatuses: INTERNAL_SERVER_ERROR, UNAUTHORIZED
    max-attempts: 3
    delay: 1s

  kafka:
    bootstrapServers: localhost:29091, localhost:29092, localhost:29093
    update-topic-name: scrapper.link_update
    dlq-processing-topic-name: link_update_processing_dlq
    dlq-deserializer-topic-name: link_update_deserializer_dlq
    topics-property:
      - topicName: link_update_processing_dlq
        number-partitions: 3
        replication-factor: 3
      - topicName: link_update_deserializer_dlq
        number-partitions: 3
        replication-factor: 3

spring:
  application:
    name: bot
  jackson:
    time-zone: UTC
  cache:
    cache-names:
      - rate-limit-buckets-bot
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s

management:
  server:
    port: 8091

  endpoints:
    web:
      base-path: /
      path-mapping:
        prometheus: /metrics
      exposure:
        include: health, info, prometheus
  endpoint:
    health:
      enabled: true
      show-details: always
    info:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

bucket4j:
  enabled: true

  default-metric-tags:
    - key: IP
      expression: getHeader("X-Forwarded-For")
      types: REJECTED_COUNTER

  filter-config-caching-enabled: true
  filter-config-cache-name: rate-limit-buckets-bot
  filters:
    - id: filterUpdate
      cache-name: rate-limit-buckets-bot
      http-content-type: application/json
      http-status-code: TOO_MANY_REQUESTS
      http-response-body: '{
        "description": "Too many requests",
        "code": "429",
        "exceptionName": "string",
        "exceptionMessage": "Too many requests",
        "stacktrace": [
          "string"
        ]
      }'

      url: /updates
      strategy: first
      rate-limits:
        - cache-key: getHeader("X-Forwarded-For")
          num-tokens: 1
          bandwidths:
            - id: bandwidthsChat
              capacity: 100
              time: 1
              unit: minutes
      metrics:
        enabled: true
server:
  port: 8090

logging:
  config: classpath:log4j2-plain.xml

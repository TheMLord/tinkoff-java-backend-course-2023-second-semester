package edu.java.domain.jooq;

import edu.java.domain.jooq.tables.Link;
import edu.java.domain.jooq.tables.Relation;
import edu.java.domain.jooq.tables.Tgchat;
import edu.java.domain.jooq.tables.records.LinkRecord;
import edu.java.domain.jooq.tables.records.RelationRecord;
import edu.java.domain.jooq.tables.records.TgchatRecord;
import javax.annotation.processing.Generated;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<LinkRecord> CONSTRAINT_2 = Internal.createUniqueKey(Link.LINK, DSL.name("CONSTRAINT_2"), new TableField[] { Link.LINK.ID }, true);
    public static final UniqueKey<LinkRecord> CONSTRAINT_23 = Internal.createUniqueKey(Link.LINK, DSL.name("CONSTRAINT_23"), new TableField[] { Link.LINK.LINK_NAME }, true);
    public static final UniqueKey<RelationRecord> CONSTRAINT_D = Internal.createUniqueKey(Relation.RELATION, DSL.name("CONSTRAINT_D"), new TableField[] { Relation.RELATION.ID }, true);
    public static final UniqueKey<TgchatRecord> CONSTRAINT_9 = Internal.createUniqueKey(Tgchat.TGCHAT, DSL.name("CONSTRAINT_9"), new TableField[] { Tgchat.TGCHAT.CHAT_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<RelationRecord, TgchatRecord> FK_CHAT = Internal.createForeignKey(Relation.RELATION, DSL.name("FK_CHAT"), new TableField[] { Relation.RELATION.CHAT_ID }, Keys.CONSTRAINT_9, new TableField[] { Tgchat.TGCHAT.CHAT_ID }, true);
    public static final ForeignKey<RelationRecord, LinkRecord> FK_LINK = Internal.createForeignKey(Relation.RELATION, DSL.name("FK_LINK"), new TableField[] { Relation.RELATION.LINK_ID }, Keys.CONSTRAINT_2, new TableField[] { Link.LINK.ID }, true);
}
